/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import src.generic.Output;
import src.generic.Tuple;
import src.intervalType2.system.IT2_Rulebase;
import java.awt.Container;
import java.awt.Font;
import java.awt.event.ComponentListener;
import java.util.Iterator;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JPanel;
import src.tools.JMathPlotter;

/**
 *
 * @author shivamawasthi
 */
public class Detail extends javax.swing.JFrame {

    /**
     * Creates new form Detail
     */
    List[] linVal = null;
    IT2_Rulebase rulebase1;
    Font sub ;
    Font text;
    List val;
    double[] values;
    Preview p = null, pre = null;
    Container plot = null;
    JPanel j = null;
    public Detail() {
        initComponents();
        Font head = new Font("Heading",java.awt.Font.BOLD,24);
        jTextArea1.setFont(head);
       // jTextArea1.setText("                                          Details"+"\n");
        sub = new Font("Sub",java.awt.Font.BOLD,18);
        jTextArea1.setFont(sub);
        //jEditorPane1.setFont(sub);
         text = new Font("text",java.awt.Font.PLAIN,12);
        //jEditorPane1.setFont(text);
         jButton2.setEnabled(false);
         
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(68);
        jTextArea1.setRows(40);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("View Membership Function");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");

        jButton2.setText("View Control Surface");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jComboBox2, 0, 265, Short.MAX_VALUE)
                    .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10))
                    .add(layout.createSequentialGroup()
                        .add(46, 46, 46)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 460, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel2)
                                .add(6, 6, 6)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton1)
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton2)))
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jComboBox2.removeAllItems();
        
        int index = jComboBox1.getSelectedIndex();
        List[] jk=(List[]) linVal[2].get(index);
        Iterator r = jk[0].iterator();
        while(r.hasNext())
        {
            jComboBox2.addItem(r.next());
        }
        jComboBox2.setSelectedIndex(0);
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        
        int index = jComboBox1.getSelectedIndex();
        List[] jk=(List[]) linVal[2].get(index);
        System.out.println(jk[0]);
        int de = jComboBox2.getSelectedIndex();
        System.out.println( de);
        if(de!=-1)
        {
        double[] rang = (double[]) jk[2].get(de);
       String mf = (String) jk[1].get(de);
        jLabel1.setText(mf);
        if(mf.equals("Gaussian"))
        {
            jLabel2.setText("UMF("+rang[0]+", "+rang[1]+" )"+" LMF( "+rang[3]+", "+rang[4]+" )");
        }else{
            
        jLabel2.setText("UMF("+rang[0]+", "+rang[1]+", "+rang[2]+" )"+" LMF( "+rang[3]+", "+rang[4]+", "+rang[5]+" )");
        }
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int u = jComboBox1.getSelectedIndex();
       double[] rangee = (double[]) linVal[1].get(u);
        List[] jk=(List[]) linVal[2].get(u);
        String men = (String) jk[1].get(jComboBox2.getSelectedIndex());
        String valueee = (String) jComboBox2.getSelectedItem();
        double[] mf = (double[]) jk[2].get(jComboBox2.getSelectedIndex());
        p = new Preview();
              plot = p.graph((String)jComboBox1.getSelectedItem(),rangee[0],rangee[1],men,valueee,mf,true);
        View v = new View();
        v.setContentPane(plot);
        v.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int si = linVal[0].size();
        pre = new Preview();
        plot = pre.plotCtrlSurface(false, 100, 100, val,(double[])linVal[1].get(si-1), (String)linVal[0].get(si-1), rulebase1);
 //       plot.removeComponentListener();
        View v = new View();
        v.setTitle("Interval Type-2 Fuzzy Logic System Control Surface");
        v.setContentPane(plot);
        v.setVisible(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Detail().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

public void initial(List[] l,IT2_Rulebase rul,double[] v,double t,List va)
{
    jButton2.setEnabled(false);
   if(l[0].size()==3)
   {
       jButton2.setEnabled(true);
   }
    val = va;
    linVal = l;
    rulebase1 = rul;
    values = v;
    int dw = l[0].size();
    for(int b =0;b<dw;b++)
    {
        jComboBox1.addItem(l[0].get(b));
    }
    jComboBox1.setSelectedIndex(0);
    
//    int index = jComboBox1.getSelectedIndex();
//        List[] jk=(List[]) linVal[2].get(index);
//        Iterator r = jk[0].iterator();
//        while(r.hasNext())
//        {
//            jComboBox2.addItem(r.next());
//        }
//        jComboBox2.setSelectedIndex(0);
        
        
    jTextArea1.setFont(sub);
    jTextArea1.append("Inputs"+"\n\n");
    int s = l[0].size();
    jTextArea1.setFont(text);
    for(int i =0;i<s-1;i++)
    {
        jTextArea1.append(i+1+") "+(String) l[0].get(i)+" : "+v[i]+"\n");
    }
    jTextArea1.append("\n");
    jTextArea1.setFont(sub);
    jTextArea1.append("Output"+"\n\n");
    jTextArea1.setFont(text);
    jTextArea1.append("1) "+(String) l[0].get(s-1)+" : "+t+"\n\n\n");
    jTextArea1.setTabSize(32);
    jTextArea1.append("Linguistic Variables ");
    for(int ta = 1;ta<=jTextArea1.getTabSize();ta++)
        {
            jTextArea1.append(" ");
        }
    jTextArea1.append(" Range\n\n");
    for(int i =0;i<s;i++)
    {
        double[] d =new double[2];
        String o = (String) l[0].get(i);
        d = (double[]) l[1].get(i);
        int len = o.length();
        jTextArea1.setTabSize(53-len);
       System.out.println(jTextArea1.getTabSize()+"  :"+len);
       // System.out.println(jTextArea1.getColumns());
         jTextArea1.append((i+1)+") "+o);
        for(int ta = 1;ta<=jTextArea1.getTabSize();ta++)
        {
            jTextArea1.append(" ");
        }
        jTextArea1.append("[ "+d[0]+" , "+d[1]+"]"+"\n");
    }
    jTextArea1.setTabSize(34);
    jTextArea1.append("\n");
    jTextArea1.append("Linguistic Values "); 
    for(int ta = 1;ta<=jTextArea1.getTabSize();ta++)
        {
            jTextArea1.append(" ");
        }
    jTextArea1.append(" Membership Function\n\n");
    for(int i =0;i<s;i++)
    {
        String o = (String) l[0].get(i);
        jTextArea1.append((i+1)+") "+o+"\n");
        List[] y = (List[]) l[2].get(i);
        int q = y[0].size();
        for(int j =0;j<q;j++)
        {
            String ki = (String) y[0].get(j);
            int lent = ki.length();
          //  System.out.println(lent+"  len val");
            double[] wq = new double[6];
            wq = (double[]) y[2].get(j);
            String mem = (String) y[1].get(j);
            jTextArea1.setTabSize(46-lent);
            if(mem.equals("Gaussian"))
            {
            jTextArea1.append("    "+(j+1)+") "+ki);
             for(int ta = 1;ta<=jTextArea1.getTabSize();ta++)
        {
            jTextArea1.append(" ");
        }
             jTextArea1.append(mem+"   UMF( "+wq[0]+", "+wq[1]+" )   LMF( "+wq[3]+", "+wq[4]+" )\n");
            }else
            {
                
                jTextArea1.append("    "+(j+1)+") "+ki);
                for(int ta = 1;ta<=jTextArea1.getTabSize();ta++)
        {
            jTextArea1.append(" ");
        }
                jTextArea1.append(mem+"   UMF( "+wq[0]+", "+wq[1]+", "+wq[2]+" )   LMF( "+wq[3]+", "+wq[4]+", "+wq[5]+" )\n");
            }
        }
        jTextArea1.append("\n");
    }
    int wqe = va.size();
    jTextArea1.append("\nRules for the System: \n\n");
    jTextArea1.append(""+rul+"\n\n");
    jTextArea1.append("Centroid of the output for "+(String)l[0].get(wqe-1)+" (based on centroid type reduction):\n");
    TreeMap<Output, Object[]> centroid = rul.evaluateGetCentroid(1);
        Object[] centroidTip = centroid.get((Output)va.get(wqe-1));
        Tuple centroidTipXValues = (Tuple)centroidTip[0];
        double centroidTipYValues = ((Double)centroidTip[1]);
        jTextArea1.append(centroidTipXValues+" at y = "+centroidTipYValues+"\n\n");
    
    
}



}
