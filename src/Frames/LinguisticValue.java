/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Data.SaveData;
import java.awt.Container;
import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InvalidClassException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 *
 * @author shivamawasthi
 */
public class LinguisticValue extends javax.swing.JFrame {

    /**
     * Creates new form LinguisticValue
     */
    
    List inVar = null, inVal = null, linVal[] = null,linmf[] = null, linmf1[]=null, linmf2[] = null;
    String outV = null;
    double[] outR = null;
     LinguisticValue1 l = null;
     DefaultListModel lm = null;
     JPanel j = null;
     JFileChooser fc;
     File path;
     DeleteLinguistic dl =null;
     EditLinguistic el = null;
     EditInput e = null;
     Preview p = null;
     Container plot = null;
    
    /* linVal[0] = input Variable;
     * linVal[1] = input Range;
     * linVal[2] = reference to instance of linmf
     * 
     * linmf[0] = linguistic value for referenced input
     * linmf[1] = MF for linguistic value
     * linmf[2] = value for plotting MF
     * 
     */
    
    
    public LinguisticValue() {
        initComponents();
        
        linVal = new ArrayList[3];
        linVal[0] = new ArrayList();
        linVal[1] = new ArrayList();
        linVal[2] = new ArrayList();
        
        linmf = new ArrayList[3];
        linmf1 = new ArrayList[3];
        linmf2 = new ArrayList[3];
        
        linmf1[0] = new ArrayList();
        linmf1[1] = new ArrayList();
        linmf1[2] = new ArrayList();
        lm = new DefaultListModel();
        lm.clear();
        jList1.setModel(lm);
        
        jLabel4.setText(null);
        jLabel5.setText(null);
        jLabel6.setText(null);
        j = new JPanel();
        j.setPreferredSize(new Dimension(329, 194));
        
        fc = new JFileChooser();
        path = null;
        
        
    }
    
    public LinguisticValue(File p) {
        initComponents();
        
        linVal = new ArrayList[3];
        linVal[0] = new ArrayList();
        linVal[1] = new ArrayList();
        linVal[2] = new ArrayList();
        
        linmf = new ArrayList[3];
        linmf1 = new ArrayList[3];
        linmf2 = new ArrayList[3];
        
        linmf1[0] = new ArrayList();
        linmf1[1] = new ArrayList();
        linmf1[2] = new ArrayList();
        lm = new DefaultListModel();
        lm.clear();
        jList1.setModel(lm);
        
        jLabel4.setText(null);
        jLabel5.setText(null);
        jLabel6.setText(null);
        j = new JPanel();
        j.setPreferredSize(new Dimension(329, 194));
        
        fc = new JFileChooser();
        path = p;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jPopupMenu5 = new javax.swing.JPopupMenu();
        jPopupMenu6 = new javax.swing.JPopupMenu();
        jPopupMenu7 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jEditorPane1.setEditable(false);
        jEditorPane1.setText("Membership Functions\n\nMembership functions are used in the fuzzification and defuzzification steps of a FLS, to map the non-fuzzy input values to fuzzy \nlinguistic terms and vice versa. A membership function is used to quantify a linguistic term.");
        jScrollPane1.setViewportView(jEditorPane1);

        jLabel1.setText("Add Linguistic Values");

        jLabel2.setText("Edit Linguistic value");

        jLabel3.setText("Delete Linguistic Value");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jList1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jInternalFrame1.setBorder(null);
        jInternalFrame1.setVisible(true);
        jInternalFrame1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jInternalFrame1MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 329, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 194, Short.MAX_VALUE)
        );

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Next");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("jLabel4");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("jLabel5");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("jLabel6");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .add(jSeparator1)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSeparator2)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(jButton6)
                                                .add(0, 0, Short.MAX_VALUE))
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                    .add(jPanel1Layout.createSequentialGroup()
                                                        .add(jLabel3)
                                                        .add(18, 18, 18)
                                                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                    .add(jPanel1Layout.createSequentialGroup()
                                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                            .add(jLabel1)
                                                            .add(jLabel2))
                                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                            .add(jPanel1Layout.createSequentialGroup()
                                                                .add(29, 29, 29)
                                                                .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                                                            .add(jPanel1Layout.createSequentialGroup()
                                                                .add(26, 26, 26)
                                                                .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                                .add(18, 18, 18)
                                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .add(jPanel1Layout.createSequentialGroup()
                                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                            .add(jPanel1Layout.createSequentialGroup()
                                                                .add(45, 45, 45)
                                                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                                    .add(jLabel5)
                                                                    .add(jLabel6))))
                                                        .add(0, 0, Short.MAX_VALUE)))))
                                        .add(18, 18, 18))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .add(0, 0, Short.MAX_VALUE)
                                        .add(jLabel4)
                                        .add(121, 121, 121)))
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jInternalFrame1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 297, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(10, 10, 10)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jButton1)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel2)
                                    .add(jButton2))
                                .add(18, 18, 18)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel3)
                                    .add(jButton3)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(7, 7, 7)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel5))
                    .add(jInternalFrame1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton5)
                    .add(jButton6)
                    .add(jLabel7))
                .add(11, 11, 11))
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("New");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator3);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setText("Open");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Open System");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Save");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Save as");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator5);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Quit");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem8.setText("Variables");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);
        jMenu2.add(jSeparator7);

        jMenuItem9.setText("MemberShip Function");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);
        jMenu2.add(jSeparator6);

        jMenuItem10.setText("Delete");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(l == null)
        {
           l = new LinguisticValue1((String) jComboBox1.getSelectedItem());
           l.range((double[]) linVal[1].get(linVal[0].indexOf(jComboBox1.getSelectedItem())));
        
           l.setVisible(true);  
          //  addMf();
        }else
        {
            l.pack();
            l.init((String) jComboBox1.getSelectedItem());
           l.range((double[]) linVal[1].get(linVal[0].indexOf(jComboBox1.getSelectedItem())));
        
           l.setVisible(true);  
           // addMf();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
       
        if(l!=null)
        {  addMf();    }
         lm.clear();
        int d = jComboBox1.getSelectedIndex();
        List lis[] = new ArrayList[3]; 
        lis[0] = new ArrayList();
        lis[1] = new ArrayList();
        lis[2] = new ArrayList();
              lis = (List[]) linVal[2].get(d);
              try{
                  
              Iterator ir = lis[0].iterator();
        while(ir.hasNext())
        {
            String w = (String) ir.next();
         //   System.out.println(w);
            lm.addElement(w);
        }
              }catch(NullPointerException e)
              {
                  System.out.println("nothing");
              }    
        
    }//GEN-LAST:event_formWindowActivated

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        lm.clear();
        int d = jComboBox1.getSelectedIndex();
       try{
        
            List lis[] = new ArrayList[3]; 
        lis[0] = new ArrayList();
        lis[1] = new ArrayList();
        lis[2] = new ArrayList();
              lis = (List[]) linVal[2].get(d);
              try{
                  
              Iterator ir = lis[0].iterator();
        while(ir.hasNext())
        {
            lm.addElement(ir.next());
        }
              }catch(NullPointerException e)
              {
                  System.out.println("nothing");
              }
       }catch(IndexOutOfBoundsException e)
       {
           System.out.println("Exception");
       }
               
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jList1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusLost
        // TODO add your handling code here:
        
        jList1.clearSelection();
        jLabel4.setText(null);
        jLabel5.setText(null);
        jLabel6.setText(null);
        jInternalFrame1.setContentPane(j);
        
        
    }//GEN-LAST:event_jList1FocusLost

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        jList1.clearSelection();
        jPanel1.grabFocus();
        jLabel4.setText(null);
        jLabel5.setText(null);
        jLabel6.setText(null);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        try{
        int d = jComboBox1.getSelectedIndex();
        List lis[] = new ArrayList[3]; 
        lis[0] = new ArrayList();
        lis[1] = new ArrayList();
        lis[2] = new ArrayList();
              lis = (List[]) linVal[2].get(d);
         int e = jList1.getSelectedIndex();
         String n = (String) lis[1].get(e);
         jLabel4.setText(n);
         double dd[] = (double[]) lis[2].get(e);
         if(!"Gaussian".equals(n))
         {      
      jLabel6.setText("UMF ( "+dd[0]+", "+dd[1]+", "+dd[2]+" )");
      jLabel5.setText("LMF ( "+dd[3]+", "+dd[4]+", "+dd[5]+" )");
       }else
         {
           jLabel6.setText("UMF ( "+dd[0]+", "+dd[1]+" )");
           jLabel5.setText("LMF ( "+dd[3]+", "+dd[4]+" )");
       }
         
         
         
         
         Preview p = new Preview();
       Container plot = p.graph((String)jComboBox1.getSelectedItem(), ((double[])(linVal[1].get(jComboBox1.getSelectedIndex())))[0], ((double[])(linVal[1].get(jComboBox1.getSelectedIndex())))[1], n, (String)jList1.getSelectedValue(), dd, false);
         plot.setPreferredSize(new Dimension(329, 194));
         
         jInternalFrame1.setContentPane(plot);
         
         
        }catch(ArrayIndexOutOfBoundsException e)
        {
            
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        List[] l = new ArrayList[2];
        l[0] = new ArrayList();
        l[1] = new ArrayList();
        double[] ddd = new double[2];
        int si = linVal[0].size();
        si = si-1;
        for(int i =0;i<si;i++)
        {
           l[0].add(linVal[0].get(i));
           l[1].add(linVal[1].get(i));
        }
        ddd = (double[]) linVal[1].get(si);
        InputValue iv = new InputValue(path);
        iv.ival = l[0];
        iv.rang = l[1];
        iv.out = (String) linVal[0].get(si);
        iv.range1 = ddd;
         iv.setLocationRelativeTo(null);
                       iv.setVisible(true);
                       dispose();
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
         InputValue iv = new InputValue();
       // iv.setLocationRelativeTo(null);
        iv.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try{
                    
                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
          try{      
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               int frameNo = sf.getFrameNo();
               switch(frameNo)
               {
                   case 1: 
                   {
                       InputValue iv = new InputValue(file);
                       iv.ival = sf.getInputVariables();
                       iv.rang = sf.getInputRanges();
                       iv.out = sf.getOutputVariable();
                       iv.range1 = sf.getOutputRange();
                       //iv.path = file;
                       iv.setLocationRelativeTo(null);
                       iv.setVisible(true);
                       dispose();
                   }
                       break;
                       
                   case 2:
                   {
                       sf.setInputRanges(null);
                       sf.setInputVariables(null);
                       sf.setOutputRange(null);
                       sf.setOutputVariable(null);
                       sf.setFrameNo(0);
                       sf.setName(null);
                       
                       LinguisticValue lv = new LinguisticValue(file);
                       lv.linVal = sf.getLinVal1();
                       lv.se();
                       lv.setLocationRelativeTo(null);
                       lv.setVisible(true);
                       dispose();
                   }
                       break;
                    case 3:
                   {
                        Rules r = new Rules(file);
                        r.linVal = sf.getLinVal1();
                        r.ruleBase = sf.getRulebase();
                        r.ru = sf.getRu();
                        
      
                        r.setLocationRelativeTo(null);
                        r.setVisible(true);
                          dispose();
                   }
                         
               }
               ois.close();
               
               
          }catch(InvalidClassException e)
          {
             e.printStackTrace();
          }
            }catch (FileNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        
        if(path!=null)
        {
            SaveData sf =new SaveData();
                sf.setName("LinguisticValue");
                sf.setFrameNo(2);
                sf.setLinVal1(linVal);
                try{
                    
            FileOutputStream fos = new FileOutputStream(path);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
               
                oos.close();
                }catch(FileNotFoundException ex)
                {
                    
                } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else
        {
            
            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                
                SaveData sf =new SaveData();
                sf.setName("LinguisticValue");
                sf.setFrameNo(2);
                sf.setLinVal1(linVal);
                        
                File file = fc.getSelectedFile();
                try{
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
                path = file;
                oos.close();
                } catch (FileNotFoundException ex) {
                Logger.getLogger(LinguisticValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            }
        }
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        
        
        int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                
                SaveData sf =new SaveData();
                sf.setName("LinguisticValue");
                sf.setFrameNo(2);
                sf.setLinVal1(linVal);
                        
                File file = fc.getSelectedFile();
                try{
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
                path = file;
                oos.close();
                } catch (FileNotFoundException ex) {
                Logger.getLogger(LinguisticValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            }
        
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
         if(path!=null)
        {
            try{
               
            FileInputStream fis = new FileInputStream(path);
                ObjectInputStream ois = new ObjectInputStream(fis);
               
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               SaveData sf1 =new SaveData();
                sf1.setName("LinguisticValue");
                sf1.setFrameNo(2);
                sf1.setLinVal1(linVal);
                
                if(sf.equals(sf1))
                {
                    dispose();
                }
                else
                {
                    NotSaveDialog nsd = new NotSaveDialog(sf1,path);
                    nsd.setVisible(true);
                    nsd.setAlwaysOnTop(true);
                    nsd.setLocationRelativeTo(null);
                }
               
                ois.close();
            }
            
             catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
               
        }else
        {
            SaveData sf1 =new SaveData();
                   sf1.setName("LinguisticValue");
                sf1.setFrameNo(2);
                sf1.setLinVal1(linVal);
                NotSaveDialog nsd = new NotSaveDialog(sf1,path);
                 nsd.setVisible(true);
                    nsd.setAlwaysOnTop(true);
                    nsd.setLocationRelativeTo(null);
        }
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int sss = linVal[2].size();
        int c=0;
        for(int i =0;i<sss;i++)
        {
          if(((List[])linVal[2].get(i))[0].isEmpty())
          {
              c= c+1;
          }
        }
        if(c==0)
        {
        jLabel7.setText(" ");
            
        Rules r = new Rules();
         r.initVal(linVal,path);
        
        System.out.println("size in   "+linVal[0].size());
      
        r.setLocationRelativeTo(null);
        r.setVisible(true);
        dispose();
        }else
            
        {
            jLabel7.setText("Please set atleast one MF for each input !!");
        }
            
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int sss = linVal[2].size();
        int c=0;
        for(int i =0;i<sss;i++)
        {
          if(((List[])linVal[2].get(i))[0].isEmpty())
          {
              c= c+1;
          }
        }
        if(c==0)
        {
            jLabel7.setText(" ");
        
        if(dl!=null)
        {
            dl.pack();
            dl.deleteLinguis(linVal);
            dl.setLocationRelativeTo(null);
            dl.toFront();
            dl.setVisible(true);
        }else
        {
            dl = new DeleteLinguistic();
            dl.deleteLinguis(linVal);
            dl.setLocationRelativeTo(null);
            dl.toFront();
            dl.setVisible(true);
        }
        }else
            
        {
            jLabel7.setText("Please set atleast one MF for each input !!");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int sss = linVal[2].size();
        int c=0;
        for(int i =0;i<sss;i++)
        {
          if(((List[])linVal[2].get(i))[0].isEmpty())
          {
              c= c+1;
          }
        }
        if(c==0)
        {
            jLabel7.setText(" ");
        if(el!=null)
        {
            el.pack();
            el.editLinguist(linVal);
            el.setLocationRelativeTo(null);
            el.toFront();
            el.setVisible(true);
        }else
        {
            el = new EditLinguistic();
            el.editLinguist(linVal);
            el.setLocationRelativeTo(null);
            el.toFront();
            el.setVisible(true);
        }
        }else
            
        {
            jLabel7.setText("Please set atleast one MF for each input !!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        
        int sss = linVal[2].size();
        int c=0;
        for(int i =0;i<sss;i++)
        {
          if(((List[])linVal[2].get(i))[0].isEmpty())
          {
              c= c+1;
          }
        }
        if(c==0)
        {
            jLabel7.setText(" ");
        if(el!=null)
        {
            el.pack();
            el.editLinguist(linVal);
            el.setLocationRelativeTo(null);
            el.toFront();
            el.setVisible(true);
        }else
        {
            el = new EditLinguistic();
            el.editLinguist(linVal);
            el.setLocationRelativeTo(null);
            el.toFront();
            el.setVisible(true);
        }
        }else
            
        {
            jLabel7.setText("Please set atleast one MF for each input !!");
        }
        
        
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        
         int sss = linVal[2].size();
        int c=0;
        for(int i =0;i<sss;i++)
        {
          if(((List[])linVal[2].get(i))[0].isEmpty())
          {
              c= c+1;
          }
        }
        if(c==0)
        {
            jLabel7.setText(" ");
        
        if(dl!=null)
        {
            dl.pack();
            dl.deleteLinguis(linVal);
            dl.setLocationRelativeTo(null);
            dl.toFront();
            dl.setVisible(true);
        }else
        {
            dl = new DeleteLinguistic();
            dl.deleteLinguis(linVal);
            dl.setLocationRelativeTo(null);
            dl.toFront();
            dl.setVisible(true);
        }
        }else
            
        {
            jLabel7.setText("Please set atleast one MF for each input !!");
        }
        
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        
        if(linVal[0].isEmpty())
        {
        }else
        {
            if(e!=null)
            {
                e.pack();
                e.setLocationRelativeTo(null);
                e.editinput(linVal[0], linVal[1], outR);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }else
            {
                e = new EditInput();
                e.setLocationRelativeTo(null);
                e.editinput(linVal[0], linVal[1], outR);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jInternalFrame1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jInternalFrame1MouseClicked
        // TODO add your handling code here:
        int c = evt.getClickCount();
       try{ 
        if(c==2)
        {
            int u = jComboBox1.getSelectedIndex();
       double[] rangee = (double[]) linVal[1].get(u);
        List[] jk=(List[]) linVal[2].get(u);
        String input = (String) jComboBox1.getSelectedItem();
        String n = (String) jList1.getSelectedValue();
        String mf = (String) jk[1].get(jList1.getSelectedIndex());
        double[] mfv = (double[]) jk[2].get(jList1.getSelectedIndex());
        p = new Preview();
              plot = p.graph(input,rangee[0],rangee[1],mf,n,mfv,true);
        View v = new View();
        v.setContentPane(plot);
        v.setVisible(true);
        
        }
       }catch(ArrayIndexOutOfBoundsException e){
           
       }
    }//GEN-LAST:event_jInternalFrame1MouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try{
                    
                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
          try{      
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               int frameNo = sf.getFrameNo();
               if(frameNo==4)
               {
                   Model d = new Model();
        d.rule = sf.getRulebase();
                        
        d.linVal = sf.getLinVal1();
        d.inOutObjects();
        
               }
          }catch(InvalidClassException e)
          {
             e.printStackTrace();
          }
            }catch (FileNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinguisticValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinguisticValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinguisticValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinguisticValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LinguisticValue().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JPopupMenu jPopupMenu5;
    private javax.swing.JPopupMenu jPopupMenu6;
    private javax.swing.JPopupMenu jPopupMenu7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    // End of variables declaration//GEN-END:variables


public void inputVal(List iVar, List iRange, String outVar, double[] outRange, File p)
{
    inVar = iVar;
    inVal = iRange;
    outV = outVar;
    outR = outRange;
    
    Iterator it = inVar.iterator();
    Iterator it1 = inVal.iterator();
    
    while(it.hasNext())
    {
        
        linmf1 = new ArrayList[3];
        linmf1[0] = new ArrayList();
        linmf1[1] = new ArrayList();
        linmf1[2] = new ArrayList();
        
        
        
        Object h = it.next();
        jComboBox1.addItem(h);
        linVal[0].add(h);
        linVal[1].add(it1.next());
        linVal[2].add(linmf1);
    }
    
    linmf1 = new ArrayList[3];
        linmf1[0] = new ArrayList();
        linmf1[1] = new ArrayList();
        linmf1[2] = new ArrayList();
        
        
        
        
    jComboBox1.addItem(outV);
    linVal[0].add(outV);
    linVal[1].add(outR);
    linVal[2].add(linmf1);
    
   path = p; 
    
}


public void addMf()
{
   linmf = l.mfV();
   int c = jComboBox1.getSelectedIndex();
   try{
   Iterator y = linmf[0].iterator();
   Iterator y1 = linmf[1].iterator();
   Iterator y2 = linmf[2].iterator();
   
   while(y.hasNext())
   {
       ((List[])linVal[2].get(c))[0].add(y.next());
       ((List[])linVal[2].get(c))[1].add(y1.next());
       ((List[])linVal[2].get(c))[2].add(y2.next());
   }
      l.formVal1 = null;
   }catch(NullPointerException e )
   {
       
   }
   
     
        
}

public void se()
   {
    
     Iterator irr = linVal[0].iterator();
     while(irr.hasNext())
     {
         jComboBox1.addItem(irr.next());
     }
       
       
   } 





}
