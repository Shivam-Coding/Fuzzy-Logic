/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Data.SaveData;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InvalidClassException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author shivamawasthi
 */
public class InputValue extends javax.swing.JFrame {
Linguistic ln = null;
   List ival = null;
   List rang = null;
    DefaultListModel lm = null;
    DefaultListModel ol = null;
    Iterator ie = null;
    double range[] = null, range1[]=null ;
    String out = null;
    
    LinguisticValue lv = null;
    JFileChooser fc;
    File path ;
    DeleteInput d = null;
    EditInput e = null;
    
    
    /**
     * Creates new form InputValue
     */
    public InputValue() {
        initComponents();
        ival = new ArrayList();
        rang = new ArrayList();
        lm = new DefaultListModel();
        ol = new DefaultListModel();
        lm.clear();
        ol.clear();
        jList1.setModel(lm);
        jList2.setModel(ol);
       range = new double[2];
       range1 = new double[2];
       
        lv = new LinguisticValue();
        lv.setLocationRelativeTo(null);
        
        fc = new JFileChooser();
       path =null;
      
       
       
       
      //  ir = ival.iterator();
    }
    
    
     public InputValue(File p) {
        initComponents();
        ival = new ArrayList();
        rang = new ArrayList();
        lm = new DefaultListModel();
        ol = new DefaultListModel();
        lm.clear();
        ol.clear();
        jList1.setModel(lm);
        jList2.setModel(ol);
       range = new double[2];
       range1 = new double[2];
       
        lv = new LinguisticValue();
        lv.setLocationRelativeTo(null);
        
        fc = new JFileChooser();
       path = p ;
       out = new String();
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem5 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jEditorPane1.setEditable(false);
        jEditorPane1.setText("Linguistic Variables\n\nLinguistic variables are the input or output variables of the system whose values are words or sentences from a natural \nlanguage, instead of numerical values. A linguistic variable is generally decomposed into a set of linguistic terms.");
        jScrollPane1.setViewportView(jEditorPane1);

        jLabel1.setText("Add Linguistic Variables");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jList1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jList2FocusLost(evt);
            }
        });
        jScrollPane3.setViewportView(jList2);

        jLabel2.setText("Input Variables");

        jLabel3.setText("Output Variable");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(32, 32, 32)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 202, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 213, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(33, 33, 33)
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(59, 59, 59))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(79, 79, 79)
                                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(13, 13, 13)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel6)
                        .add(14, 14, 14)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(jLabel8)
                            .add(jLabel9))))
                .addContainerGap())
        );

        jLabel4.setText("Delete Linguistic Variable");

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Edit Linguistic Variable");

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Next");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 580, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 765, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(38, 38, 38)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 765, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 765, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jButton1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton2)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton3)
                            .add(jLabel5))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton5)
                    .add(jButton6)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(48, 48, 48))
        );

        jMenu1.setText("File");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("New");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator4);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Open System");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator3);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem7.setText("Save as");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator5);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Quit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem8.setText("Modify");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);
        jMenu2.add(jSeparator6);

        jMenuItem9.setText("Delete");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 417, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(ln==null)
        {
        ln = new Linguistic();
        ln.setVisible(true);
        ln.setAlwaysOnTop(true);
        ln.clear();
        }
        else
        { ln.toFront();
        ln.pack();
        ln.setVisible(true);
        ln.clear();
        }
        
       System.out.println("After else");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
        
        
        if(ln==null)
        {
            setEnabled(true);
        }
        else
        {
            ln.toFront();
        }
        
    }//GEN-LAST:event_formMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        System.out.println("window active");
        
        if(ln!=null){
          
            addVariables();
        
        }
        if(ival.isEmpty())
        { 
          lm.clear();
            
           // jList1.setModel(lm);
            System.out.println("List empty");
        }
       // jList1.setModel(lm);
        
        else
        {
            lm.clear();
            
            //System.out.println("in else");
            String t ;
            
            ie = ival.iterator();
            Iterator rr = rang.iterator();
            
           while(ie.hasNext())
            {
                System.out.println("in while");
                range = (double[]) rr.next();
                t=(String) ie.next();
                lm.addElement(t);
            System.out.println("in window focus  "+t+" "+ range[0]+" "+range[1]);
            
            }
        }
        
        if(out==null)
        {
            ol.clear();
        }else
        {
            ol.clear();
            ol.addElement(out);
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if(ival.isEmpty())
        {
            
        }else
        {
        jList1.setSelectionBackground(Color.blue);
        jList1.setSelectionForeground(Color.white);
        
        
        Double d = null;
       int p = jList1.getSelectedIndex();
        String n = (String) ival.get(p);
        range = (double[]) rang.get(p);
        d = new Double(range[0]);
        System.out.println(n+" "+ range[0]+" "+range[1]);
        
        jLabel6.setText("Range");
        jLabel7.setText(d.toString());
        d = new Double(range[1]);
        jLabel8.setText(d.toString());
        jLabel9.setText("to");
        
        } 
    }//GEN-LAST:event_jList1MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        
        jList1.setSelectionBackground(Color.white);
        jList1.setSelectionForeground(Color.black);
        jList1.setFocusable(false);
        
        jList2.setSelectionBackground(Color.white);
        jList2.setSelectionForeground(Color.black);
        jList2.setFocusable(false);
        
        jLabel6.setText(null);
        jLabel7.setText(null);
        jLabel8.setText(null);
        jLabel9.setText(null);
        
        jList1.setFocusable(true);
        jList2.setFocusable(true);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jList1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusLost
        // TODO add your handling code here:
        
        jList1.setSelectionBackground(Color.white);
        jList1.setSelectionForeground(Color.black);
        
        jLabel6.setText(null);
        jLabel7.setText(null);
        jLabel8.setText(null);
        jLabel9.setText(null);
        
    }//GEN-LAST:event_jList1FocusLost

    private void jList2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList2FocusLost
        // TODO add your handling code here:
        jList2.setSelectionBackground(Color.white);
        jList2.setSelectionForeground(Color.black);
        
        jLabel6.setText(null);
        jLabel7.setText(null);
        jLabel8.setText(null);
        jLabel9.setText(null);
        
    }//GEN-LAST:event_jList2FocusLost

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        // TODO add your handling code here:
        if(out!=null)
        {
        jList2.setSelectionBackground(Color.blue);
        jList2.setSelectionForeground(Color.white);
        
        
        Double d = null;
       
        
        d = new Double(range1[0]);
       
        
        jLabel6.setText("Range");
        jLabel7.setText(d.toString());
        d = new Double(range1[1]);
        jLabel8.setText(d.toString());
        jLabel9.setText("to");
        }
        
    }//GEN-LAST:event_jList2MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        if(path!=null)
        {
            try{
               
            FileInputStream fis = new FileInputStream(path);
                ObjectInputStream ois = new ObjectInputStream(fis);
               
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               
               SaveData sf1 =new SaveData();
             
                sf1.setName("InputValue");
                sf1.setFrameNo(1);
                sf1.setInputVariables(ival);
                sf1.setInputRanges(rang);
                sf1.setOutputRange(range1);
                sf1.setOutputVariable(out);
              //  sf1.stInput();
                List[] l = sf.getLinVal1();
                List[] l1 = sf1.getLinVal1();
                
                if(l[0].equals(l1[0]) && l[1].equals(l1[1]) && l[2].equals(l1[2]) )
                {
                    dispose();
                }
                else
                {
                    NotSaveDialog nsd = new NotSaveDialog(sf1,path);
                    nsd.setVisible(true);
                    nsd.setAlwaysOnTop(true);
                    nsd.setLocationRelativeTo(null);
                }
               
                ois.close();
            }
            
             catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
               
        }else
        {
            SaveData sf1 =new SaveData();
                sf1.setName("InputValue");
                sf1.setFrameNo(1);
                sf1.setInputVariables(ival);
                sf1.setInputRanges(rang);
                sf1.setOutputRange(range1);
                sf1.setOutputVariable(out);
              //  sf1.stInput();
                NotSaveDialog nsd = new NotSaveDialog(sf1,path);
                    nsd.setVisible(true);
                    nsd.setAlwaysOnTop(true);
                    nsd.setLocationRelativeTo(null);
        }
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(ival.isEmpty() || out==null)
        {
            jLabel10.setText("Please enter atlest one input and one output variable !!");
            
        }else
        {
        
            jLabel10.setText(" ");
        lv.inputVal(ival, rang, out, range1,path);
        
        lv.setVisible(true);
        dispose();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        
        
        
        int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                
                SaveData sf =new SaveData();
                sf.setName("InputValue");
                sf.setFrameNo(1);
                sf.setInputVariables(ival);
                sf.setInputRanges(rang);
                sf.setOutputRange(range1);
                sf.setOutputVariable(out);
              //  sf.stInput();
                
                File file = fc.getSelectedFile();
                try{
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
                path = file;
                oos.close();
                } catch (FileNotFoundException ex) {
                Logger.getLogger(LinguisticValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            }
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try{
                    
                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
          try{      
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               int frameNo = sf.getFrameNo();
               switch(frameNo)
               {
                   case 1: 
                   {
                       InputValue iv = new InputValue(file);
                       iv.ival = sf.getInputVariables();
                       iv.rang = sf.getInputRanges();
                       iv.out = sf.getOutputVariable();
                       iv.range1 = sf.getOutputRange();
                       //iv.path = file;
                       iv.setLocationRelativeTo(null);
                       iv.setVisible(true);
                       dispose();
                   }
                       break;
                       
                   case 2:
                   {
                       sf.setInputRanges(null);
                       sf.setInputVariables(null);
                       sf.setOutputRange(null);
                       sf.setOutputVariable(null);
                       sf.setFrameNo(0);
                       sf.setName(null);
                       
                       LinguisticValue lv = new LinguisticValue(file);
                       lv.linVal = sf.getLinVal1();
                       lv.se();
                       lv.setLocationRelativeTo(null);
                       lv.setVisible(true);
                       dispose();
                   }
                       break;
                    case 3:
                   {
                        Rules r = new Rules(file);
                        r.linVal = sf.getLinVal1();
                        r.ruleBase = sf.getRulebase();
                        r.ru= sf.getRu();
                        
      
                        r.setLocationRelativeTo(null);
                        r.setVisible(true);
                          dispose();
                   }
                         
               }
               ois.close();
               
               System.out.println(o.toString());
          }catch(InvalidClassException e)
          {
             e.printStackTrace();
          }
            }catch (FileNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        
        InputValue iv = new InputValue();
       // iv.setLocationRelativeTo(null);
        iv.setVisible(true);
        
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        if(path!=null)
        {
            SaveData sf =new SaveData();
                sf.setName("InputValue");
                sf.setFrameNo(1);
                sf.setInputVariables(ival);
                sf.setInputRanges(rang);
                sf.setOutputRange(range1);
                sf.setOutputVariable(out);
             //   sf.stInput();
                try{
                    
            FileOutputStream fos = new FileOutputStream(path);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
               
                oos.close();
                }catch(FileNotFoundException ex)
                {
                    
                } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else
        {
            
            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                
                SaveData sf =new SaveData();
                sf.setName("InputValue");
                sf.setFrameNo(1);
                sf.setInputVariables(ival);
                sf.setInputRanges(rang);
                sf.setOutputRange(range1);
                sf.setOutputVariable(out);
               // sf.stInput();
                
                File file = fc.getSelectedFile();
                try{
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(sf);
                path = file;
                oos.close();
                } catch (FileNotFoundException ex) {
                Logger.getLogger(LinguisticValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            }
            
        }
        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(ival.isEmpty())
        {
        }else
        {
        
        if(d!=null)
        {
            d.pack();
            d.setLocationRelativeTo(null);
            d.delete(ival,rang);
            d.toFront();
            d.setAlwaysOnTop(true);
            d.setVisible(true);
        }
        else
        {
            d=new DeleteInput();
            d.setLocationRelativeTo(null);
            d.delete(ival,rang);
            d.toFront();
            d.setAlwaysOnTop(true);
            d.setVisible(true);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(ival.isEmpty())
        {
        }else
        {
            if(e!=null)
            {
                e.pack();
                e.setLocationRelativeTo(null);
                e.editinput(ival, rang, range1);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }else
            {
                e = new EditInput();
                e.setLocationRelativeTo(null);
                e.editinput(ival, rang,  range1);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        
        if(ival.isEmpty())
        {
        }else
        {
            if(e!=null)
            {
                e.pack();
                e.setLocationRelativeTo(null);
                e.editinput(ival, rang, range1);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }else
            {
                e = new EditInput();
                e.setLocationRelativeTo(null);
                e.editinput(ival, rang,  range1);
                e.toFront();
                e.setAlwaysOnTop(true);
                e.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        
        if(ival.isEmpty())
        {
        }else
        {
        
        if(d!=null)
        {
            d.pack();
            d.setLocationRelativeTo(null);
            d.delete(ival,rang);
            d.toFront();
            d.setAlwaysOnTop(true);
            d.setVisible(true);
        }
        else
        {
            d=new DeleteInput();
            d.setLocationRelativeTo(null);
            d.delete(ival,rang);
            d.toFront();
            d.setAlwaysOnTop(true);
            d.setVisible(true);
        }
        }
        
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try{
                    
                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
          try{      
               Object o = ois.readObject();
               
               SaveData sf = (SaveData)o;
               
               int frameNo = sf.getFrameNo();
               if(frameNo==4)
               {
                   Model d = new Model();
        d.rule = sf.getRulebase();
                        
        d.linVal = sf.getLinVal1();
        d.inOutObjects();
        
               }
          }catch(InvalidClassException e)
          {
             e.printStackTrace();
          }
            }catch (FileNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InputValue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              InputValue in = new InputValue();
                 
                 in.setLocationRelativeTo(null);
                 in.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    // End of variables declaration//GEN-END:variables


public void addVariables()
{
    if(!ln.inputN().isEmpty())
    {
    Iterator i = ln.inputN().iterator();
    Iterator i1 = ln.inputR().iterator();
    while(i.hasNext())
    {
        ival.add(i.next());
        rang.add(i1.next());
    }
    
    }
    ln.lm.clear();
    ln.ran1.clear();
    
    if((ln.outN())!=null)
    { 
        
    out = ln.outN();
    range1 = ln.outR();
    ln.out = null;
    //ln.range2[0] =0.0;
    //ln.range2[1] =0.0;
    
   // System.out.println("range1 val: "+range1[0]+" "+range1[1]);
    }
}
    


}
